{{/* vim: set filetype=mustache: */}}
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: {{ include "cilium.name" . }}
    helm.sh/chart: {{ include "cilium.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  name: {{ template "cilium.fullname" . }}
data:
  clean-cilium-state: '{{ index .Values.agent "clean-cilium-state" }}'
  clean-cilium-bpf-state: '{{ index .Values.agent "clean-cilium-bpf-state" }}'
  wait-bpf-mount: '{{ index .Values.agent "wait-bpf-mount" }}'

  debug: '{{ .Values.config.debug }}'
  cluster-id: '{{ index .Values.config "cluster-id" }}'
  cluster-name: '{{ index .Values.config "cluster-name" }}'
  kvstore: etcd
  kvstore-opt: etcd.config=/etc/cilium/etcd.yml  # etcd.qps  Rate limit in kv store operations per second

  etcd: |-
    # This etcd-config contains the etcd endpoints of your cluster. If you use TLS
    # please make sure you follow the tutorial in https://cilium.link/etcd-config
    endpoints:
  {{- if hasKey .Values.etcd "endpoints" }}
{{ toYaml .Values.etcd.endpoints | indent 4 }}
  {{- else }}
    - https://{{ template "cilium.fullname" . }}-etcd-client.{{ .Release.Namespace }}.svc:2379
  {{- end }}
    #
    # In case you want to use TLS in etcd, uncomment the 'ca-file' line
    # and create a kubernetes secret by following the tutorial in
    # https://cilium.link/etcd-config
    ca-file: /etc/pki/etcd/etcd-client-ca.crt
    #
    # In case you want client to server authentication, uncomment the following
    # lines and create a kubernetes secret by following the tutorial in
    # https://cilium.link/etcd-config
    key-file: /etc/pki/etcd/etcd-client.key
    cert-file: /etc/pki/etcd/etcd-client.crt

  cilium: |-
    container-runtime: {{ .Values.agent.runtime }}
  {{- if eq .Values.agent.runtime "docker" }}
    container-runtime-endpoint: /var/run/docker.sock
  {{- else if eq .Values.agent.runtime "containerd" }}
    container-runtime-endpoint: /var/run/containerd/containerd.sock
  {{- else if eq .Values.agent.runtime "crio" }}
    container-runtime-endpoint: /var/run/crio/crio.sock
  {{- end }}
  {{- if .Values.agent.ipsec.enable }}
    enable-ipsec: true
    ipsec-key-file: /etc/pki/ipsec/keys
  {{- end }}
    # Config
{{ toYaml (omit .Values.config "debug" "cluster-id" "cluster-name") | indent 4 }}
{{- if .Values.operator.enable }}
  debug-operator: '{{ .Values.operator.config.debug }}'
  operator: |-
    # Config
{{ toYaml (omit .Values.operator.config "debug") | indent 4 }}
{{- end }}
